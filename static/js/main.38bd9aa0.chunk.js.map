{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","collapsed","handleClick","setState","this","props","className","as","summary","start","dateTime","timeZone","location","href","htmlLink","role","target","description","variant","size","id","onClick","Component","EventList","events","map","InfoAlert","color","getStyle","style","text","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","e","updateNumberOfEvents","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","history","pushState","pathname","newurl","protocol","host","App","locationEvents","mounted","slice","currentLocation","newNumber","parseInt","errorText","getData","number","city","split","shift","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","atatus","install"],"mappings":"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","file":"static/js/main.38bd9aa0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n    state = {\n        event: {},\n        collapsed: true,\n    };\n\n    handleClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render() {\n        const { event } = this.props;\n        const { collapsed } = this.state;\n        return (\n            <div className=\"event\" >\n                <div className=\"summary\" as=\"h4\">{event.summary}\n                    <div className=\"event-body\">\n                        <p className=\"start-date\">{event.start.dateTime} ({event.start.timeZone})</p>\n\n                        <p className=\"location\">@{event.summary} | {event.location}</p>\n\n                        {!collapsed &&\n                            <div className={`extra-details ${this.state.collapsed ? \"hide\" : \"show\"}`}>\n                                <br />\n                                <h6 className=\"about\">About Event</h6>\n                                <a href={event.htmlLink} role=\"noopener\" target=\"_blank\">\n                                    See deatails on Google calendar\n                                </a>\n                                <p className=\"event-description\">{event.description}</p>\n\n                            </div>\n                        }\n                        <button variant=\"light\" size=\"md\" id=\"eventButton\" className={`${collapsed ? \"show\" : \"hide\"}-details-btn`} onClick={this.handleClick}>\n                            {collapsed ? \"show Details\" : \"Hide Details\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'blue';\n    }\n}\n\nexport { InfoAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        if (suggestions.length === 0) {\n            this.setState({\n                query: value,\n                infoText: 'We cannot find the city you are looking for. Please try another city',\n            });\n        } else {\n            return this.setState({\n                query: value,\n                suggestions,\n                infoText: ''\n            });\n        }\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <InfoAlert text={this.state.infoText} />\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    render() {\n        return (\n            <div className=\"NumberOfEvents\">\n                <p>Number of events to show:</p>\n                <input type=\"number\"\n                    value={this.props.numberOfEvents}\n                    className=\"number-of-events\"\n                    onChange={(e) => this.props.updateNumberOfEvents(e)} />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n];\n\nexport { mockData };","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nimport NProgress from 'nprogress';\nimport { mockData } from './mock-data';\nimport axios from 'axios';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'https://ma5oinm7w8.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const getAccessToken = async () => {\n\n    const accessToken = localStorage.getItem('access_token');\n\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://ma5oinm7w8.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://ma5oinm7w8.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};","import './nprogress.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents'\nimport { getEvents, extractLocations } from './api';\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n  }\n\n  async componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = async (location, numberOfEvents) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, this.state.numberOfEvents),\n          currentLocation: location,\n        });\n      }\n    });\n  }\n\n  updateNumberOfEvents = async (e) => {\n    const newNumber = e.target.value ? parseInt(e.target.value) : 32;\n    if (newNumber < 1 || newNumber > 32) {\n      return this.setState({\n        errorText: 'Please choose a number between 1 and 32.',\n        numberOfEvents: 0,\n      });\n    } else {\n      this.setState({\n        errorText: \"\",\n        numberOfEvents: newNumber,\n      });\n      this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\n    }\n  };\n\n  getData = () => {\n    if (this.mounted) {\n      const { locations, events } = this.state;\n      const data = locations.map((location) => {\n        const number = events.filter((event) => event.location === location).length\n        const city = location.split(', ').shift();\n        return { city, number };\n      });\n      return data;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents}\n          updateNumberOfEvents={this.updateNumberOfEvents}\n          errorText={this.state.errorText} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('9baeaa5a6f3b48ff83bc25c4e79ca093').install();"],"sourceRoot":""}